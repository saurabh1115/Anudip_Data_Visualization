LAB-

1->

 SELECT
    ->     s.StudentID,
    ->     s.FirstName,
    ->     s.LastName,
    ->     e.EnrollmentID,
    ->     e.EnrollmentDate,
    ->     e.InstructorID
    -> FROM
    ->     enrollment e
    -> RIGHT OUTER JOIN
    ->     student s ON e.StudentID = s.StudentID;
+-----------+-----------+----------+--------------+----------------+--------------+
| StudentID | FirstName | LastName | EnrollmentID | EnrollmentDate | InstructorID |
+-----------+-----------+----------+--------------+----------------+--------------+
|         1 | John      | Doe      |            1 | NULL           |         NULL |
|         1 | John      | Doe      |            2 | NULL           |         NULL |
|         2 | Jane      | Smith    |            3 | NULL           |         NULL |
|         2 | Jane      | Smith    |            4 | NULL           |         NULL |
|         3 | Bob       | Johnson  |         NULL | NULL           |         NULL |
+-----------+-----------+----------+--------------+----------------+--------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2->

 SELECT
    ->     s.StudentID,
    ->     s.Email,
    ->     e.EnrollmentID,
    ->     c.CourseID
    -> FROM
    ->     student s
    -> LEFT JOIN
    ->     enrollment e ON s.StudentID = e.StudentID
    -> LEFT JOIN
    ->     course c ON e.CourseID = c.CourseID;
+-----------+------------------------+--------------+----------+
| StudentID | Email                  | EnrollmentID | CourseID |
+-----------+------------------------+--------------+----------+
|         1 | johndoe@example.com    |            1 |      101 |
|         1 | johndoe@example.com    |            2 |      102 |
|         2 | janesmith@example.com  |            3 |      103 |
|         2 | janesmith@example.com  |            4 |      104 |
|         3 | bobjohnson@example.com |         NULL |     NULL |
+-----------+------------------------+--------------+----------+
5 rows in set (0.00 sec)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
LAB-

1->

SELECT
    s.StudentID,
    s.Email,
    e.EnrollmentID,
    c.CourseID
FROM
    student s
FULL OUTER JOIN
    enrollment e ON s.StudentID = e.StudentID
FULL OUTER JOIN
    course c ON e.CourseID = c.CourseID;

+-----------+------------------------+--------------+----------+
| StudentID | Email                  | EnrollmentID | CourseID |
+-----------+------------------------+--------------+----------+
|         1 | johndoe@example.com    |            2 |      102 |
|         1 | johndoe@example.com    |            1 |      101 |
|         2 | janesmith@example.com  |            4 |      104 |
|         2 | janesmith@example.com  |            3 |      103 |
|         3 | bobjohnson@example.com |         NULL |     NULL |
+-----------+------------------------+--------------+----------+
5 rows in set (0.01 sec)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2->


mysql> SELECT
    ->     s.StudentID,
    ->     s.Email,
    ->     e.EnrollmentID,
    ->     c.CourseID
    -> FROM
    ->     student s
    -> NATURAL JOIN
    ->     enrollment e
    -> NATURAL JOIN
    ->     course c;
+-----------+-----------------------+--------------+----------+
| StudentID | Email                 | EnrollmentID | CourseID |
+-----------+-----------------------+--------------+----------+
|         1 | johndoe@example.com   |            1 |      101 |
|         1 | johndoe@example.com   |            2 |      102 |
|         2 | janesmith@example.com |            3 |      103 |
|         2 | janesmith@example.com |            4 |      104 |
+-----------+-----------------------+--------------+----------+
4 rows in set (0.01 sec)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CHATGPT-----

SCENARIO-1-->

mysql> CREATE TABLE employees (
    ->     EmployeeID INT PRIMARY KEY,
    ->     EmployeeName VARCHAR(100),
    ->     DepartmentID INT
    -> );
Query OK, 0 rows affected (0.08 sec)

mysql> CREATE TABLE departments (
    ->     DepartmentID INT PRIMARY KEY,
    ->     DepartmentName VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql> INSERT INTO departments (DepartmentID, DepartmentName)
    -> VALUES
    ->     (1, 'Sales'),
    ->     (2, 'Marketing'),
    ->     (3, 'Human Resources'),
    ->     (4, 'IT');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO employees (EmployeeID, EmployeeName, DepartmentID)
    -> VALUES
    ->     (1, 'John Doe', 1),
    ->     (2, 'Jane Smith', 2),
    ->     (3, 'Bob Johnson', 3),
    ->     (4, 'Alice Lee', 1),
    ->     (5, 'David Kim', 4);
Query OK, 5 rows affected (0.02 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT
    ->     e.EmployeeID,
    ->     e.EmployeeName,
    ->     d.DepartmentName
    -> FROM
    ->     employees e
    -> INNER JOIN
    ->     departments d ON e.DepartmentID = d.DepartmentID;
+------------+--------------+-----------------+
| EmployeeID | EmployeeName | DepartmentName  |
+------------+--------------+-----------------+
|          1 | John Doe     | Sales           |
|          2 | Jane Smith   | Marketing       |
|          3 | Bob Johnson  | Human Resources |
|          4 | Alice Lee    | Sales           |
|          5 | David Kim    | IT              |
+------------+--------------+-----------------+
5 rows in set (0.00 sec)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCENARIO-2--->

mysql> CREATE TABLE employees (
    ->     EmployeeID INT PRIMARY KEY,
    ->     EmployeeName VARCHAR(100),
    ->     ManagerID INT
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO employees (EmployeeID, EmployeeName, ManagerID)
    -> VALUES
    ->     (1, 'John Doe', NULL),
    ->     (2, 'Jane Smith', 1),
    ->     (3, 'Bob Johnson', 1),
    ->     (4, 'Alice Lee', 2),
    ->     (5, 'David Kim', 3);
Query OK, 5 rows affected (0.04 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT
    ->     e.EmployeeID,
    ->     e.EmployeeName,
    ->     m.EmployeeName AS ManagerName
    -> FROM
    ->     employees e
    -> LEFT JOIN
    ->     employees m ON e.ManagerID = m.EmployeeID;
+------------+--------------+-------------+
| EmployeeID | EmployeeName | ManagerName |
+------------+--------------+-------------+
|          1 | John Doe     | NULL        |
|          2 | Jane Smith   | John Doe    |
|          3 | Bob Johnson  | John Doe    |
|          4 | Alice Lee    | Jane Smith  |
|          5 | David Kim    | Bob Johnson |
+------------+--------------+-------------+
5 rows in set (0.00 sec)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PROMPT->

Prompt:

I have two tables in an employee database: Employee and Manager. The Employee table contains columns like EmployeeID, EmployeeName, and a foreign key ManagerID referencing the ManagerID in the Manager table. The Manager table contains columns like ManagerID and ManagerName. I want to retrieve a list of all employees along with their manager's name. Write an SQL query using a JOIN to achieve this.